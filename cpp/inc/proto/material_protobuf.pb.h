// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/material_protobuf.proto

#ifndef PROTOBUF_proto_2fmaterial_5fprotobuf_2eproto__INCLUDED
#define PROTOBUF_proto_2fmaterial_5fprotobuf_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_proto_2fmaterial_5fprotobuf_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsLibrary_Material_ScalarPropertyImpl();
void InitDefaultsLibrary_Material_ScalarProperty();
void InitDefaultsLibrary_Material_VectorPropertyImpl();
void InitDefaultsLibrary_Material_VectorProperty();
void InitDefaultsLibrary_Material_MatrixPropertyImpl();
void InitDefaultsLibrary_Material_MatrixProperty();
void InitDefaultsLibrary_MaterialImpl();
void InitDefaultsLibrary_Material();
void InitDefaultsLibraryImpl();
void InitDefaultsLibrary();
inline void InitDefaults() {
  InitDefaultsLibrary_Material_ScalarProperty();
  InitDefaultsLibrary_Material_VectorProperty();
  InitDefaultsLibrary_Material_MatrixProperty();
  InitDefaultsLibrary_Material();
  InitDefaultsLibrary();
}
}  // namespace protobuf_proto_2fmaterial_5fprotobuf_2eproto
namespace material_protobuf {
class Library;
class LibraryDefaultTypeInternal;
extern LibraryDefaultTypeInternal _Library_default_instance_;
class Library_Material;
class Library_MaterialDefaultTypeInternal;
extern Library_MaterialDefaultTypeInternal _Library_Material_default_instance_;
class Library_Material_MatrixProperty;
class Library_Material_MatrixPropertyDefaultTypeInternal;
extern Library_Material_MatrixPropertyDefaultTypeInternal _Library_Material_MatrixProperty_default_instance_;
class Library_Material_ScalarProperty;
class Library_Material_ScalarPropertyDefaultTypeInternal;
extern Library_Material_ScalarPropertyDefaultTypeInternal _Library_Material_ScalarProperty_default_instance_;
class Library_Material_VectorProperty;
class Library_Material_VectorPropertyDefaultTypeInternal;
extern Library_Material_VectorPropertyDefaultTypeInternal _Library_Material_VectorProperty_default_instance_;
}  // namespace material_protobuf
namespace material_protobuf {

enum Library_ScalarId {
  Library_ScalarId_UNKNOWN_SCALAR = 0,
  Library_ScalarId_DENSITY = 1,
  Library_ScalarId_Library_ScalarId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Library_ScalarId_Library_ScalarId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Library_ScalarId_IsValid(int value);
const Library_ScalarId Library_ScalarId_ScalarId_MIN = Library_ScalarId_UNKNOWN_SCALAR;
const Library_ScalarId Library_ScalarId_ScalarId_MAX = Library_ScalarId_DENSITY;
const int Library_ScalarId_ScalarId_ARRAYSIZE = Library_ScalarId_ScalarId_MAX + 1;

const ::google::protobuf::EnumDescriptor* Library_ScalarId_descriptor();
inline const ::std::string& Library_ScalarId_Name(Library_ScalarId value) {
  return ::google::protobuf::internal::NameOfEnum(
    Library_ScalarId_descriptor(), value);
}
inline bool Library_ScalarId_Parse(
    const ::std::string& name, Library_ScalarId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Library_ScalarId>(
    Library_ScalarId_descriptor(), name, value);
}
enum Library_VectorId {
  Library_VectorId_UNKNOWN_VECTOR = 0,
  Library_VectorId_SIGMA_T = 1,
  Library_VectorId_CHI = 2,
  Library_VectorId_Library_VectorId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Library_VectorId_Library_VectorId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Library_VectorId_IsValid(int value);
const Library_VectorId Library_VectorId_VectorId_MIN = Library_VectorId_UNKNOWN_VECTOR;
const Library_VectorId Library_VectorId_VectorId_MAX = Library_VectorId_CHI;
const int Library_VectorId_VectorId_ARRAYSIZE = Library_VectorId_VectorId_MAX + 1;

const ::google::protobuf::EnumDescriptor* Library_VectorId_descriptor();
inline const ::std::string& Library_VectorId_Name(Library_VectorId value) {
  return ::google::protobuf::internal::NameOfEnum(
    Library_VectorId_descriptor(), value);
}
inline bool Library_VectorId_Parse(
    const ::std::string& name, Library_VectorId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Library_VectorId>(
    Library_VectorId_descriptor(), name, value);
}
enum Library_MatrixId {
  Library_MatrixId_UNKNOWN_MATRIX = 0,
  Library_MatrixId_SIGMA_S = 1,
  Library_MatrixId_Library_MatrixId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Library_MatrixId_Library_MatrixId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Library_MatrixId_IsValid(int value);
const Library_MatrixId Library_MatrixId_MatrixId_MIN = Library_MatrixId_UNKNOWN_MATRIX;
const Library_MatrixId Library_MatrixId_MatrixId_MAX = Library_MatrixId_SIGMA_S;
const int Library_MatrixId_MatrixId_ARRAYSIZE = Library_MatrixId_MatrixId_MAX + 1;

const ::google::protobuf::EnumDescriptor* Library_MatrixId_descriptor();
inline const ::std::string& Library_MatrixId_Name(Library_MatrixId value) {
  return ::google::protobuf::internal::NameOfEnum(
    Library_MatrixId_descriptor(), value);
}
inline bool Library_MatrixId_Parse(
    const ::std::string& name, Library_MatrixId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Library_MatrixId>(
    Library_MatrixId_descriptor(), name, value);
}
// ===================================================================

class Library_Material_ScalarProperty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:material_protobuf.Library.Material.ScalarProperty) */ {
 public:
  Library_Material_ScalarProperty();
  virtual ~Library_Material_ScalarProperty();

  Library_Material_ScalarProperty(const Library_Material_ScalarProperty& from);

  inline Library_Material_ScalarProperty& operator=(const Library_Material_ScalarProperty& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Library_Material_ScalarProperty(Library_Material_ScalarProperty&& from) noexcept
    : Library_Material_ScalarProperty() {
    *this = ::std::move(from);
  }

  inline Library_Material_ScalarProperty& operator=(Library_Material_ScalarProperty&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Library_Material_ScalarProperty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Library_Material_ScalarProperty* internal_default_instance() {
    return reinterpret_cast<const Library_Material_ScalarProperty*>(
               &_Library_Material_ScalarProperty_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Library_Material_ScalarProperty* other);
  friend void swap(Library_Material_ScalarProperty& a, Library_Material_ScalarProperty& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Library_Material_ScalarProperty* New() const PROTOBUF_FINAL { return New(NULL); }

  Library_Material_ScalarProperty* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Library_Material_ScalarProperty& from);
  void MergeFrom(const Library_Material_ScalarProperty& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Library_Material_ScalarProperty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .material_protobuf.Library.ScalarId id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::material_protobuf::Library_ScalarId id() const;
  void set_id(::material_protobuf::Library_ScalarId value);

  // float value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  float value() const;
  void set_value(float value);

  // @@protoc_insertion_point(class_scope:material_protobuf.Library.Material.ScalarProperty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int id_;
  float value_;
  mutable int _cached_size_;
  friend struct ::protobuf_proto_2fmaterial_5fprotobuf_2eproto::TableStruct;
  friend void ::protobuf_proto_2fmaterial_5fprotobuf_2eproto::InitDefaultsLibrary_Material_ScalarPropertyImpl();
};
// -------------------------------------------------------------------

class Library_Material_VectorProperty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:material_protobuf.Library.Material.VectorProperty) */ {
 public:
  Library_Material_VectorProperty();
  virtual ~Library_Material_VectorProperty();

  Library_Material_VectorProperty(const Library_Material_VectorProperty& from);

  inline Library_Material_VectorProperty& operator=(const Library_Material_VectorProperty& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Library_Material_VectorProperty(Library_Material_VectorProperty&& from) noexcept
    : Library_Material_VectorProperty() {
    *this = ::std::move(from);
  }

  inline Library_Material_VectorProperty& operator=(Library_Material_VectorProperty&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Library_Material_VectorProperty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Library_Material_VectorProperty* internal_default_instance() {
    return reinterpret_cast<const Library_Material_VectorProperty*>(
               &_Library_Material_VectorProperty_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Library_Material_VectorProperty* other);
  friend void swap(Library_Material_VectorProperty& a, Library_Material_VectorProperty& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Library_Material_VectorProperty* New() const PROTOBUF_FINAL { return New(NULL); }

  Library_Material_VectorProperty* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Library_Material_VectorProperty& from);
  void MergeFrom(const Library_Material_VectorProperty& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Library_Material_VectorProperty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double value = 2 [packed = true];
  int value_size() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  double value(int index) const;
  void set_value(int index, double value);
  void add_value(double value);
  const ::google::protobuf::RepeatedField< double >&
      value() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_value();

  // .material_protobuf.Library.VectorId id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::material_protobuf::Library_VectorId id() const;
  void set_id(::material_protobuf::Library_VectorId value);

  // @@protoc_insertion_point(class_scope:material_protobuf.Library.Material.VectorProperty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > value_;
  mutable int _value_cached_byte_size_;
  int id_;
  mutable int _cached_size_;
  friend struct ::protobuf_proto_2fmaterial_5fprotobuf_2eproto::TableStruct;
  friend void ::protobuf_proto_2fmaterial_5fprotobuf_2eproto::InitDefaultsLibrary_Material_VectorPropertyImpl();
};
// -------------------------------------------------------------------

class Library_Material_MatrixProperty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:material_protobuf.Library.Material.MatrixProperty) */ {
 public:
  Library_Material_MatrixProperty();
  virtual ~Library_Material_MatrixProperty();

  Library_Material_MatrixProperty(const Library_Material_MatrixProperty& from);

  inline Library_Material_MatrixProperty& operator=(const Library_Material_MatrixProperty& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Library_Material_MatrixProperty(Library_Material_MatrixProperty&& from) noexcept
    : Library_Material_MatrixProperty() {
    *this = ::std::move(from);
  }

  inline Library_Material_MatrixProperty& operator=(Library_Material_MatrixProperty&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Library_Material_MatrixProperty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Library_Material_MatrixProperty* internal_default_instance() {
    return reinterpret_cast<const Library_Material_MatrixProperty*>(
               &_Library_Material_MatrixProperty_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Library_Material_MatrixProperty* other);
  friend void swap(Library_Material_MatrixProperty& a, Library_Material_MatrixProperty& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Library_Material_MatrixProperty* New() const PROTOBUF_FINAL { return New(NULL); }

  Library_Material_MatrixProperty* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Library_Material_MatrixProperty& from);
  void MergeFrom(const Library_Material_MatrixProperty& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Library_Material_MatrixProperty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double value = 4 [packed = true];
  int value_size() const;
  void clear_value();
  static const int kValueFieldNumber = 4;
  double value(int index) const;
  void set_value(int index, double value);
  void add_value(double value);
  const ::google::protobuf::RepeatedField< double >&
      value() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_value();

  // .material_protobuf.Library.MatrixId id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::material_protobuf::Library_MatrixId id() const;
  void set_id(::material_protobuf::Library_MatrixId value);

  // uint32 rows = 2;
  void clear_rows();
  static const int kRowsFieldNumber = 2;
  ::google::protobuf::uint32 rows() const;
  void set_rows(::google::protobuf::uint32 value);

  // uint32 cols = 3;
  void clear_cols();
  static const int kColsFieldNumber = 3;
  ::google::protobuf::uint32 cols() const;
  void set_cols(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:material_protobuf.Library.Material.MatrixProperty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > value_;
  mutable int _value_cached_byte_size_;
  int id_;
  ::google::protobuf::uint32 rows_;
  ::google::protobuf::uint32 cols_;
  mutable int _cached_size_;
  friend struct ::protobuf_proto_2fmaterial_5fprotobuf_2eproto::TableStruct;
  friend void ::protobuf_proto_2fmaterial_5fprotobuf_2eproto::InitDefaultsLibrary_Material_MatrixPropertyImpl();
};
// -------------------------------------------------------------------

class Library_Material : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:material_protobuf.Library.Material) */ {
 public:
  Library_Material();
  virtual ~Library_Material();

  Library_Material(const Library_Material& from);

  inline Library_Material& operator=(const Library_Material& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Library_Material(Library_Material&& from) noexcept
    : Library_Material() {
    *this = ::std::move(from);
  }

  inline Library_Material& operator=(Library_Material&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Library_Material& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Library_Material* internal_default_instance() {
    return reinterpret_cast<const Library_Material*>(
               &_Library_Material_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(Library_Material* other);
  friend void swap(Library_Material& a, Library_Material& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Library_Material* New() const PROTOBUF_FINAL { return New(NULL); }

  Library_Material* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Library_Material& from);
  void MergeFrom(const Library_Material& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Library_Material* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Library_Material_ScalarProperty ScalarProperty;
  typedef Library_Material_VectorProperty VectorProperty;
  typedef Library_Material_MatrixProperty MatrixProperty;

  // accessors -------------------------------------------------------

  // repeated .material_protobuf.Library.Material.ScalarProperty scalar_property = 5;
  int scalar_property_size() const;
  void clear_scalar_property();
  static const int kScalarPropertyFieldNumber = 5;
  const ::material_protobuf::Library_Material_ScalarProperty& scalar_property(int index) const;
  ::material_protobuf::Library_Material_ScalarProperty* mutable_scalar_property(int index);
  ::material_protobuf::Library_Material_ScalarProperty* add_scalar_property();
  ::google::protobuf::RepeatedPtrField< ::material_protobuf::Library_Material_ScalarProperty >*
      mutable_scalar_property();
  const ::google::protobuf::RepeatedPtrField< ::material_protobuf::Library_Material_ScalarProperty >&
      scalar_property() const;

  // repeated .material_protobuf.Library.Material.VectorProperty vector_property = 6;
  int vector_property_size() const;
  void clear_vector_property();
  static const int kVectorPropertyFieldNumber = 6;
  const ::material_protobuf::Library_Material_VectorProperty& vector_property(int index) const;
  ::material_protobuf::Library_Material_VectorProperty* mutable_vector_property(int index);
  ::material_protobuf::Library_Material_VectorProperty* add_vector_property();
  ::google::protobuf::RepeatedPtrField< ::material_protobuf::Library_Material_VectorProperty >*
      mutable_vector_property();
  const ::google::protobuf::RepeatedPtrField< ::material_protobuf::Library_Material_VectorProperty >&
      vector_property() const;

  // repeated .material_protobuf.Library.Material.MatrixProperty matrix_property = 7;
  int matrix_property_size() const;
  void clear_matrix_property();
  static const int kMatrixPropertyFieldNumber = 7;
  const ::material_protobuf::Library_Material_MatrixProperty& matrix_property(int index) const;
  ::material_protobuf::Library_Material_MatrixProperty* mutable_matrix_property(int index);
  ::material_protobuf::Library_Material_MatrixProperty* add_matrix_property();
  ::google::protobuf::RepeatedPtrField< ::material_protobuf::Library_Material_MatrixProperty >*
      mutable_matrix_property();
  const ::google::protobuf::RepeatedPtrField< ::material_protobuf::Library_Material_MatrixProperty >&
      matrix_property() const;

  // string full_name = 1;
  void clear_full_name();
  static const int kFullNameFieldNumber = 1;
  const ::std::string& full_name() const;
  void set_full_name(const ::std::string& value);
  #if LANG_CXX11
  void set_full_name(::std::string&& value);
  #endif
  void set_full_name(const char* value);
  void set_full_name(const char* value, size_t size);
  ::std::string* mutable_full_name();
  ::std::string* release_full_name();
  void set_allocated_full_name(::std::string* full_name);

  // string abbreviation = 2;
  void clear_abbreviation();
  static const int kAbbreviationFieldNumber = 2;
  const ::std::string& abbreviation() const;
  void set_abbreviation(const ::std::string& value);
  #if LANG_CXX11
  void set_abbreviation(::std::string&& value);
  #endif
  void set_abbreviation(const char* value);
  void set_abbreviation(const char* value, size_t size);
  ::std::string* mutable_abbreviation();
  ::std::string* release_abbreviation();
  void set_allocated_abbreviation(::std::string* abbreviation);

  // uint32 A = 3;
  void clear_a();
  static const int kAFieldNumber = 3;
  ::google::protobuf::uint32 a() const;
  void set_a(::google::protobuf::uint32 value);

  // uint32 Z = 4;
  void clear_z();
  static const int kZFieldNumber = 4;
  ::google::protobuf::uint32 z() const;
  void set_z(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:material_protobuf.Library.Material)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::material_protobuf::Library_Material_ScalarProperty > scalar_property_;
  ::google::protobuf::RepeatedPtrField< ::material_protobuf::Library_Material_VectorProperty > vector_property_;
  ::google::protobuf::RepeatedPtrField< ::material_protobuf::Library_Material_MatrixProperty > matrix_property_;
  ::google::protobuf::internal::ArenaStringPtr full_name_;
  ::google::protobuf::internal::ArenaStringPtr abbreviation_;
  ::google::protobuf::uint32 a_;
  ::google::protobuf::uint32 z_;
  mutable int _cached_size_;
  friend struct ::protobuf_proto_2fmaterial_5fprotobuf_2eproto::TableStruct;
  friend void ::protobuf_proto_2fmaterial_5fprotobuf_2eproto::InitDefaultsLibrary_MaterialImpl();
};
// -------------------------------------------------------------------

class Library : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:material_protobuf.Library) */ {
 public:
  Library();
  virtual ~Library();

  Library(const Library& from);

  inline Library& operator=(const Library& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Library(Library&& from) noexcept
    : Library() {
    *this = ::std::move(from);
  }

  inline Library& operator=(Library&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Library& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Library* internal_default_instance() {
    return reinterpret_cast<const Library*>(
               &_Library_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(Library* other);
  friend void swap(Library& a, Library& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Library* New() const PROTOBUF_FINAL { return New(NULL); }

  Library* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Library& from);
  void MergeFrom(const Library& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Library* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Library_Material Material;

  typedef Library_ScalarId ScalarId;
  static const ScalarId UNKNOWN_SCALAR =
    Library_ScalarId_UNKNOWN_SCALAR;
  static const ScalarId DENSITY =
    Library_ScalarId_DENSITY;
  static inline bool ScalarId_IsValid(int value) {
    return Library_ScalarId_IsValid(value);
  }
  static const ScalarId ScalarId_MIN =
    Library_ScalarId_ScalarId_MIN;
  static const ScalarId ScalarId_MAX =
    Library_ScalarId_ScalarId_MAX;
  static const int ScalarId_ARRAYSIZE =
    Library_ScalarId_ScalarId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ScalarId_descriptor() {
    return Library_ScalarId_descriptor();
  }
  static inline const ::std::string& ScalarId_Name(ScalarId value) {
    return Library_ScalarId_Name(value);
  }
  static inline bool ScalarId_Parse(const ::std::string& name,
      ScalarId* value) {
    return Library_ScalarId_Parse(name, value);
  }

  typedef Library_VectorId VectorId;
  static const VectorId UNKNOWN_VECTOR =
    Library_VectorId_UNKNOWN_VECTOR;
  static const VectorId SIGMA_T =
    Library_VectorId_SIGMA_T;
  static const VectorId CHI =
    Library_VectorId_CHI;
  static inline bool VectorId_IsValid(int value) {
    return Library_VectorId_IsValid(value);
  }
  static const VectorId VectorId_MIN =
    Library_VectorId_VectorId_MIN;
  static const VectorId VectorId_MAX =
    Library_VectorId_VectorId_MAX;
  static const int VectorId_ARRAYSIZE =
    Library_VectorId_VectorId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  VectorId_descriptor() {
    return Library_VectorId_descriptor();
  }
  static inline const ::std::string& VectorId_Name(VectorId value) {
    return Library_VectorId_Name(value);
  }
  static inline bool VectorId_Parse(const ::std::string& name,
      VectorId* value) {
    return Library_VectorId_Parse(name, value);
  }

  typedef Library_MatrixId MatrixId;
  static const MatrixId UNKNOWN_MATRIX =
    Library_MatrixId_UNKNOWN_MATRIX;
  static const MatrixId SIGMA_S =
    Library_MatrixId_SIGMA_S;
  static inline bool MatrixId_IsValid(int value) {
    return Library_MatrixId_IsValid(value);
  }
  static const MatrixId MatrixId_MIN =
    Library_MatrixId_MatrixId_MIN;
  static const MatrixId MatrixId_MAX =
    Library_MatrixId_MatrixId_MAX;
  static const int MatrixId_ARRAYSIZE =
    Library_MatrixId_MatrixId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MatrixId_descriptor() {
    return Library_MatrixId_descriptor();
  }
  static inline const ::std::string& MatrixId_Name(MatrixId value) {
    return Library_MatrixId_Name(value);
  }
  static inline bool MatrixId_Parse(const ::std::string& name,
      MatrixId* value) {
    return Library_MatrixId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated float energy_groups = 3 [packed = true];
  int energy_groups_size() const;
  void clear_energy_groups();
  static const int kEnergyGroupsFieldNumber = 3;
  float energy_groups(int index) const;
  void set_energy_groups(int index, float value);
  void add_energy_groups(float value);
  const ::google::protobuf::RepeatedField< float >&
      energy_groups() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_energy_groups();

  // repeated .material_protobuf.Library.Material materials = 4;
  int materials_size() const;
  void clear_materials();
  static const int kMaterialsFieldNumber = 4;
  const ::material_protobuf::Library_Material& materials(int index) const;
  ::material_protobuf::Library_Material* mutable_materials(int index);
  ::material_protobuf::Library_Material* add_materials();
  ::google::protobuf::RepeatedPtrField< ::material_protobuf::Library_Material >*
      mutable_materials();
  const ::google::protobuf::RepeatedPtrField< ::material_protobuf::Library_Material >&
      materials() const;

  // string library_name = 1;
  void clear_library_name();
  static const int kLibraryNameFieldNumber = 1;
  const ::std::string& library_name() const;
  void set_library_name(const ::std::string& value);
  #if LANG_CXX11
  void set_library_name(::std::string&& value);
  #endif
  void set_library_name(const char* value);
  void set_library_name(const char* value, size_t size);
  ::std::string* mutable_library_name();
  ::std::string* release_library_name();
  void set_allocated_library_name(::std::string* library_name);

  // uint32 number_of_groups = 2;
  void clear_number_of_groups();
  static const int kNumberOfGroupsFieldNumber = 2;
  ::google::protobuf::uint32 number_of_groups() const;
  void set_number_of_groups(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:material_protobuf.Library)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > energy_groups_;
  mutable int _energy_groups_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::material_protobuf::Library_Material > materials_;
  ::google::protobuf::internal::ArenaStringPtr library_name_;
  ::google::protobuf::uint32 number_of_groups_;
  mutable int _cached_size_;
  friend struct ::protobuf_proto_2fmaterial_5fprotobuf_2eproto::TableStruct;
  friend void ::protobuf_proto_2fmaterial_5fprotobuf_2eproto::InitDefaultsLibraryImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Library_Material_ScalarProperty

// .material_protobuf.Library.ScalarId id = 1;
inline void Library_Material_ScalarProperty::clear_id() {
  id_ = 0;
}
inline ::material_protobuf::Library_ScalarId Library_Material_ScalarProperty::id() const {
  // @@protoc_insertion_point(field_get:material_protobuf.Library.Material.ScalarProperty.id)
  return static_cast< ::material_protobuf::Library_ScalarId >(id_);
}
inline void Library_Material_ScalarProperty::set_id(::material_protobuf::Library_ScalarId value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:material_protobuf.Library.Material.ScalarProperty.id)
}

// float value = 2;
inline void Library_Material_ScalarProperty::clear_value() {
  value_ = 0;
}
inline float Library_Material_ScalarProperty::value() const {
  // @@protoc_insertion_point(field_get:material_protobuf.Library.Material.ScalarProperty.value)
  return value_;
}
inline void Library_Material_ScalarProperty::set_value(float value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:material_protobuf.Library.Material.ScalarProperty.value)
}

// -------------------------------------------------------------------

// Library_Material_VectorProperty

// .material_protobuf.Library.VectorId id = 1;
inline void Library_Material_VectorProperty::clear_id() {
  id_ = 0;
}
inline ::material_protobuf::Library_VectorId Library_Material_VectorProperty::id() const {
  // @@protoc_insertion_point(field_get:material_protobuf.Library.Material.VectorProperty.id)
  return static_cast< ::material_protobuf::Library_VectorId >(id_);
}
inline void Library_Material_VectorProperty::set_id(::material_protobuf::Library_VectorId value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:material_protobuf.Library.Material.VectorProperty.id)
}

// repeated double value = 2 [packed = true];
inline int Library_Material_VectorProperty::value_size() const {
  return value_.size();
}
inline void Library_Material_VectorProperty::clear_value() {
  value_.Clear();
}
inline double Library_Material_VectorProperty::value(int index) const {
  // @@protoc_insertion_point(field_get:material_protobuf.Library.Material.VectorProperty.value)
  return value_.Get(index);
}
inline void Library_Material_VectorProperty::set_value(int index, double value) {
  value_.Set(index, value);
  // @@protoc_insertion_point(field_set:material_protobuf.Library.Material.VectorProperty.value)
}
inline void Library_Material_VectorProperty::add_value(double value) {
  value_.Add(value);
  // @@protoc_insertion_point(field_add:material_protobuf.Library.Material.VectorProperty.value)
}
inline const ::google::protobuf::RepeatedField< double >&
Library_Material_VectorProperty::value() const {
  // @@protoc_insertion_point(field_list:material_protobuf.Library.Material.VectorProperty.value)
  return value_;
}
inline ::google::protobuf::RepeatedField< double >*
Library_Material_VectorProperty::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:material_protobuf.Library.Material.VectorProperty.value)
  return &value_;
}

// -------------------------------------------------------------------

// Library_Material_MatrixProperty

// .material_protobuf.Library.MatrixId id = 1;
inline void Library_Material_MatrixProperty::clear_id() {
  id_ = 0;
}
inline ::material_protobuf::Library_MatrixId Library_Material_MatrixProperty::id() const {
  // @@protoc_insertion_point(field_get:material_protobuf.Library.Material.MatrixProperty.id)
  return static_cast< ::material_protobuf::Library_MatrixId >(id_);
}
inline void Library_Material_MatrixProperty::set_id(::material_protobuf::Library_MatrixId value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:material_protobuf.Library.Material.MatrixProperty.id)
}

// uint32 rows = 2;
inline void Library_Material_MatrixProperty::clear_rows() {
  rows_ = 0u;
}
inline ::google::protobuf::uint32 Library_Material_MatrixProperty::rows() const {
  // @@protoc_insertion_point(field_get:material_protobuf.Library.Material.MatrixProperty.rows)
  return rows_;
}
inline void Library_Material_MatrixProperty::set_rows(::google::protobuf::uint32 value) {
  
  rows_ = value;
  // @@protoc_insertion_point(field_set:material_protobuf.Library.Material.MatrixProperty.rows)
}

// uint32 cols = 3;
inline void Library_Material_MatrixProperty::clear_cols() {
  cols_ = 0u;
}
inline ::google::protobuf::uint32 Library_Material_MatrixProperty::cols() const {
  // @@protoc_insertion_point(field_get:material_protobuf.Library.Material.MatrixProperty.cols)
  return cols_;
}
inline void Library_Material_MatrixProperty::set_cols(::google::protobuf::uint32 value) {
  
  cols_ = value;
  // @@protoc_insertion_point(field_set:material_protobuf.Library.Material.MatrixProperty.cols)
}

// repeated double value = 4 [packed = true];
inline int Library_Material_MatrixProperty::value_size() const {
  return value_.size();
}
inline void Library_Material_MatrixProperty::clear_value() {
  value_.Clear();
}
inline double Library_Material_MatrixProperty::value(int index) const {
  // @@protoc_insertion_point(field_get:material_protobuf.Library.Material.MatrixProperty.value)
  return value_.Get(index);
}
inline void Library_Material_MatrixProperty::set_value(int index, double value) {
  value_.Set(index, value);
  // @@protoc_insertion_point(field_set:material_protobuf.Library.Material.MatrixProperty.value)
}
inline void Library_Material_MatrixProperty::add_value(double value) {
  value_.Add(value);
  // @@protoc_insertion_point(field_add:material_protobuf.Library.Material.MatrixProperty.value)
}
inline const ::google::protobuf::RepeatedField< double >&
Library_Material_MatrixProperty::value() const {
  // @@protoc_insertion_point(field_list:material_protobuf.Library.Material.MatrixProperty.value)
  return value_;
}
inline ::google::protobuf::RepeatedField< double >*
Library_Material_MatrixProperty::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:material_protobuf.Library.Material.MatrixProperty.value)
  return &value_;
}

// -------------------------------------------------------------------

// Library_Material

// string full_name = 1;
inline void Library_Material::clear_full_name() {
  full_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Library_Material::full_name() const {
  // @@protoc_insertion_point(field_get:material_protobuf.Library.Material.full_name)
  return full_name_.GetNoArena();
}
inline void Library_Material::set_full_name(const ::std::string& value) {
  
  full_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:material_protobuf.Library.Material.full_name)
}
#if LANG_CXX11
inline void Library_Material::set_full_name(::std::string&& value) {
  
  full_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:material_protobuf.Library.Material.full_name)
}
#endif
inline void Library_Material::set_full_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  full_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:material_protobuf.Library.Material.full_name)
}
inline void Library_Material::set_full_name(const char* value, size_t size) {
  
  full_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:material_protobuf.Library.Material.full_name)
}
inline ::std::string* Library_Material::mutable_full_name() {
  
  // @@protoc_insertion_point(field_mutable:material_protobuf.Library.Material.full_name)
  return full_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Library_Material::release_full_name() {
  // @@protoc_insertion_point(field_release:material_protobuf.Library.Material.full_name)
  
  return full_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Library_Material::set_allocated_full_name(::std::string* full_name) {
  if (full_name != NULL) {
    
  } else {
    
  }
  full_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), full_name);
  // @@protoc_insertion_point(field_set_allocated:material_protobuf.Library.Material.full_name)
}

// string abbreviation = 2;
inline void Library_Material::clear_abbreviation() {
  abbreviation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Library_Material::abbreviation() const {
  // @@protoc_insertion_point(field_get:material_protobuf.Library.Material.abbreviation)
  return abbreviation_.GetNoArena();
}
inline void Library_Material::set_abbreviation(const ::std::string& value) {
  
  abbreviation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:material_protobuf.Library.Material.abbreviation)
}
#if LANG_CXX11
inline void Library_Material::set_abbreviation(::std::string&& value) {
  
  abbreviation_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:material_protobuf.Library.Material.abbreviation)
}
#endif
inline void Library_Material::set_abbreviation(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  abbreviation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:material_protobuf.Library.Material.abbreviation)
}
inline void Library_Material::set_abbreviation(const char* value, size_t size) {
  
  abbreviation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:material_protobuf.Library.Material.abbreviation)
}
inline ::std::string* Library_Material::mutable_abbreviation() {
  
  // @@protoc_insertion_point(field_mutable:material_protobuf.Library.Material.abbreviation)
  return abbreviation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Library_Material::release_abbreviation() {
  // @@protoc_insertion_point(field_release:material_protobuf.Library.Material.abbreviation)
  
  return abbreviation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Library_Material::set_allocated_abbreviation(::std::string* abbreviation) {
  if (abbreviation != NULL) {
    
  } else {
    
  }
  abbreviation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), abbreviation);
  // @@protoc_insertion_point(field_set_allocated:material_protobuf.Library.Material.abbreviation)
}

// uint32 A = 3;
inline void Library_Material::clear_a() {
  a_ = 0u;
}
inline ::google::protobuf::uint32 Library_Material::a() const {
  // @@protoc_insertion_point(field_get:material_protobuf.Library.Material.A)
  return a_;
}
inline void Library_Material::set_a(::google::protobuf::uint32 value) {
  
  a_ = value;
  // @@protoc_insertion_point(field_set:material_protobuf.Library.Material.A)
}

// uint32 Z = 4;
inline void Library_Material::clear_z() {
  z_ = 0u;
}
inline ::google::protobuf::uint32 Library_Material::z() const {
  // @@protoc_insertion_point(field_get:material_protobuf.Library.Material.Z)
  return z_;
}
inline void Library_Material::set_z(::google::protobuf::uint32 value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:material_protobuf.Library.Material.Z)
}

// repeated .material_protobuf.Library.Material.ScalarProperty scalar_property = 5;
inline int Library_Material::scalar_property_size() const {
  return scalar_property_.size();
}
inline void Library_Material::clear_scalar_property() {
  scalar_property_.Clear();
}
inline const ::material_protobuf::Library_Material_ScalarProperty& Library_Material::scalar_property(int index) const {
  // @@protoc_insertion_point(field_get:material_protobuf.Library.Material.scalar_property)
  return scalar_property_.Get(index);
}
inline ::material_protobuf::Library_Material_ScalarProperty* Library_Material::mutable_scalar_property(int index) {
  // @@protoc_insertion_point(field_mutable:material_protobuf.Library.Material.scalar_property)
  return scalar_property_.Mutable(index);
}
inline ::material_protobuf::Library_Material_ScalarProperty* Library_Material::add_scalar_property() {
  // @@protoc_insertion_point(field_add:material_protobuf.Library.Material.scalar_property)
  return scalar_property_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::material_protobuf::Library_Material_ScalarProperty >*
Library_Material::mutable_scalar_property() {
  // @@protoc_insertion_point(field_mutable_list:material_protobuf.Library.Material.scalar_property)
  return &scalar_property_;
}
inline const ::google::protobuf::RepeatedPtrField< ::material_protobuf::Library_Material_ScalarProperty >&
Library_Material::scalar_property() const {
  // @@protoc_insertion_point(field_list:material_protobuf.Library.Material.scalar_property)
  return scalar_property_;
}

// repeated .material_protobuf.Library.Material.VectorProperty vector_property = 6;
inline int Library_Material::vector_property_size() const {
  return vector_property_.size();
}
inline void Library_Material::clear_vector_property() {
  vector_property_.Clear();
}
inline const ::material_protobuf::Library_Material_VectorProperty& Library_Material::vector_property(int index) const {
  // @@protoc_insertion_point(field_get:material_protobuf.Library.Material.vector_property)
  return vector_property_.Get(index);
}
inline ::material_protobuf::Library_Material_VectorProperty* Library_Material::mutable_vector_property(int index) {
  // @@protoc_insertion_point(field_mutable:material_protobuf.Library.Material.vector_property)
  return vector_property_.Mutable(index);
}
inline ::material_protobuf::Library_Material_VectorProperty* Library_Material::add_vector_property() {
  // @@protoc_insertion_point(field_add:material_protobuf.Library.Material.vector_property)
  return vector_property_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::material_protobuf::Library_Material_VectorProperty >*
Library_Material::mutable_vector_property() {
  // @@protoc_insertion_point(field_mutable_list:material_protobuf.Library.Material.vector_property)
  return &vector_property_;
}
inline const ::google::protobuf::RepeatedPtrField< ::material_protobuf::Library_Material_VectorProperty >&
Library_Material::vector_property() const {
  // @@protoc_insertion_point(field_list:material_protobuf.Library.Material.vector_property)
  return vector_property_;
}

// repeated .material_protobuf.Library.Material.MatrixProperty matrix_property = 7;
inline int Library_Material::matrix_property_size() const {
  return matrix_property_.size();
}
inline void Library_Material::clear_matrix_property() {
  matrix_property_.Clear();
}
inline const ::material_protobuf::Library_Material_MatrixProperty& Library_Material::matrix_property(int index) const {
  // @@protoc_insertion_point(field_get:material_protobuf.Library.Material.matrix_property)
  return matrix_property_.Get(index);
}
inline ::material_protobuf::Library_Material_MatrixProperty* Library_Material::mutable_matrix_property(int index) {
  // @@protoc_insertion_point(field_mutable:material_protobuf.Library.Material.matrix_property)
  return matrix_property_.Mutable(index);
}
inline ::material_protobuf::Library_Material_MatrixProperty* Library_Material::add_matrix_property() {
  // @@protoc_insertion_point(field_add:material_protobuf.Library.Material.matrix_property)
  return matrix_property_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::material_protobuf::Library_Material_MatrixProperty >*
Library_Material::mutable_matrix_property() {
  // @@protoc_insertion_point(field_mutable_list:material_protobuf.Library.Material.matrix_property)
  return &matrix_property_;
}
inline const ::google::protobuf::RepeatedPtrField< ::material_protobuf::Library_Material_MatrixProperty >&
Library_Material::matrix_property() const {
  // @@protoc_insertion_point(field_list:material_protobuf.Library.Material.matrix_property)
  return matrix_property_;
}

// -------------------------------------------------------------------

// Library

// string library_name = 1;
inline void Library::clear_library_name() {
  library_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Library::library_name() const {
  // @@protoc_insertion_point(field_get:material_protobuf.Library.library_name)
  return library_name_.GetNoArena();
}
inline void Library::set_library_name(const ::std::string& value) {
  
  library_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:material_protobuf.Library.library_name)
}
#if LANG_CXX11
inline void Library::set_library_name(::std::string&& value) {
  
  library_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:material_protobuf.Library.library_name)
}
#endif
inline void Library::set_library_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  library_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:material_protobuf.Library.library_name)
}
inline void Library::set_library_name(const char* value, size_t size) {
  
  library_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:material_protobuf.Library.library_name)
}
inline ::std::string* Library::mutable_library_name() {
  
  // @@protoc_insertion_point(field_mutable:material_protobuf.Library.library_name)
  return library_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Library::release_library_name() {
  // @@protoc_insertion_point(field_release:material_protobuf.Library.library_name)
  
  return library_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Library::set_allocated_library_name(::std::string* library_name) {
  if (library_name != NULL) {
    
  } else {
    
  }
  library_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), library_name);
  // @@protoc_insertion_point(field_set_allocated:material_protobuf.Library.library_name)
}

// uint32 number_of_groups = 2;
inline void Library::clear_number_of_groups() {
  number_of_groups_ = 0u;
}
inline ::google::protobuf::uint32 Library::number_of_groups() const {
  // @@protoc_insertion_point(field_get:material_protobuf.Library.number_of_groups)
  return number_of_groups_;
}
inline void Library::set_number_of_groups(::google::protobuf::uint32 value) {
  
  number_of_groups_ = value;
  // @@protoc_insertion_point(field_set:material_protobuf.Library.number_of_groups)
}

// repeated float energy_groups = 3 [packed = true];
inline int Library::energy_groups_size() const {
  return energy_groups_.size();
}
inline void Library::clear_energy_groups() {
  energy_groups_.Clear();
}
inline float Library::energy_groups(int index) const {
  // @@protoc_insertion_point(field_get:material_protobuf.Library.energy_groups)
  return energy_groups_.Get(index);
}
inline void Library::set_energy_groups(int index, float value) {
  energy_groups_.Set(index, value);
  // @@protoc_insertion_point(field_set:material_protobuf.Library.energy_groups)
}
inline void Library::add_energy_groups(float value) {
  energy_groups_.Add(value);
  // @@protoc_insertion_point(field_add:material_protobuf.Library.energy_groups)
}
inline const ::google::protobuf::RepeatedField< float >&
Library::energy_groups() const {
  // @@protoc_insertion_point(field_list:material_protobuf.Library.energy_groups)
  return energy_groups_;
}
inline ::google::protobuf::RepeatedField< float >*
Library::mutable_energy_groups() {
  // @@protoc_insertion_point(field_mutable_list:material_protobuf.Library.energy_groups)
  return &energy_groups_;
}

// repeated .material_protobuf.Library.Material materials = 4;
inline int Library::materials_size() const {
  return materials_.size();
}
inline void Library::clear_materials() {
  materials_.Clear();
}
inline const ::material_protobuf::Library_Material& Library::materials(int index) const {
  // @@protoc_insertion_point(field_get:material_protobuf.Library.materials)
  return materials_.Get(index);
}
inline ::material_protobuf::Library_Material* Library::mutable_materials(int index) {
  // @@protoc_insertion_point(field_mutable:material_protobuf.Library.materials)
  return materials_.Mutable(index);
}
inline ::material_protobuf::Library_Material* Library::add_materials() {
  // @@protoc_insertion_point(field_add:material_protobuf.Library.materials)
  return materials_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::material_protobuf::Library_Material >*
Library::mutable_materials() {
  // @@protoc_insertion_point(field_mutable_list:material_protobuf.Library.materials)
  return &materials_;
}
inline const ::google::protobuf::RepeatedPtrField< ::material_protobuf::Library_Material >&
Library::materials() const {
  // @@protoc_insertion_point(field_list:material_protobuf.Library.materials)
  return materials_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace material_protobuf

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::material_protobuf::Library_ScalarId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::material_protobuf::Library_ScalarId>() {
  return ::material_protobuf::Library_ScalarId_descriptor();
}
template <> struct is_proto_enum< ::material_protobuf::Library_VectorId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::material_protobuf::Library_VectorId>() {
  return ::material_protobuf::Library_VectorId_descriptor();
}
template <> struct is_proto_enum< ::material_protobuf::Library_MatrixId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::material_protobuf::Library_MatrixId>() {
  return ::material_protobuf::Library_MatrixId_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_2fmaterial_5fprotobuf_2eproto__INCLUDED
